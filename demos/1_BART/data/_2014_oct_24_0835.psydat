ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/casillas/google_drive/14_fall_2014/proseminar/psychopy2_workshop/demos/1_BART/bart.psyexp
p7
sS'dataFileName'
p8
V/Users/casillas/google_drive/14_fall_2014/proseminar/psychopy2_workshop/demos/1_BART/data/_2014_oct_24_0835
p9
sS'runtimeInfo'
p10
NsS'name'
p11
Vbart
p12
sS'dataNames'
p13
(lp14
S'resp.keys'
p15
aS'resp.rt'
p16
aS'nPumps'
p17
aS'size'
p18
aS'earnings'
p19
aS'popped'
p20
asS'autoLog'
p21
I01
sS'extraInfo'
p22
(dp23
S'expName'
p24
g12
sVgender (m/f)
p25
V
sVage
p26
V
sS'frameRate'
p27
cnumpy.core.multiarray
scalar
p28
(cnumpy
dtype
p29
(S'f8'
I0
I1
tRp30
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xd8\x16q\xb4\xb8\x00N@'
tRp31
sVsession
p32
V004
p33
sS'date'
p34
V2014_oct_24_0835
p35
sVparticipant
p36
V
ssS'loopsUnfinished'
p37
(lp38
g1
(cpsychopy.data
TrialHandler
p39
g3
NtRp40
(dp41
S'origin'
p42
V<PsychoPy2experiment version="1.81.00" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[800, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'participant': u'', u'age': u'', u'session': u'004', u'gender (m/f)': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="bart" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="updateEarnings">\u000a        <Param name="Begin Experiment" val="bankedEarnings=0.0&#10;lastBalloonEarnings=0.0&#10;thisBalloonEarnings=0.0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="updateEarnings" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="#calculate cash 'earned'&#10;if popped:&#10;  thisBalloonEarnings=0.0&#10;  lastBalloonEarnings=0.0&#10;else:   lastBalloonEarnings=thisBalloonEarnings&#10;bankedEarnings = bankedEarnings+lastBalloonEarnings" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="thisBalloonEarnings=nPumps*0.05" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <CodeComponent name="setBalloonSize">\u000a        <Param name="Begin Experiment" val="balloonSize=0.08&#10;balloonMsgHeight=0.01" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="setBalloonSize" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="balloonSize=0.08&#10;popped=False&#10;nPumps=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="#save data&#10;trials.addData('nPumps', nPumps)&#10;trials.addData('size', balloonSize)&#10;trials.addData('earnings', thisBalloonEarnings)&#10;trials.addData('popped', popped)&#10;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="balloonSize=0.1+nPumps*0.015" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="balloonBody">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="balloonBody" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[-1+balloonSize/2, 0]" valType="code" updates="set every frame"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="redBalloon.png" valType="str" updates="constant"/>\u000a        <Param name="size" val="$balloonSize" valType="code" updates="set every frame"/>\u000a      </ImageComponent>\u000a      <TextComponent name="reminderMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="reminderMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Press SPACE to pump the balloon&#10;Press RETURN to bank this sum" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.8]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="balloonValMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="balloonValMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$u&quot;This balloon value:\u005cn£%.2f&quot; %thisBalloonEarnings" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0,0.05]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="bankedMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="bankedMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$u&quot;You have banked:\u005cn£%.2f&quot; %bankedEarnings" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.8]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="checkKeys">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="checkKeys" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if event.getKeys(['space']):&#10;  nPumps=nPumps+1&#10;  if nPumps&gt;maxPumps:&#10;    popped=True&#10;    continueRoutine=False" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="bankButton">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="bankButton" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="finalScore">\u000a      <TextComponent name="finalScore_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="finalScore_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$u&quot;Well done! You banked a total of\u005cn£%2.f&quot; %bankedEarnings" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="doneKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="doneKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="checkPopped">\u000a        <Param name="Begin Experiment" val="feedbackText=&quot;&quot;&#10;from psychopy import sound&#10;bang = sound.Sound(&quot;bang.wav&quot;)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="checkPopped" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if popped==True:&#10;  feedbackText=&quot;Oops! Lost that one!&quot;&#10;  bang.play()&#10;else:&#10;  feedbackText=u&quot;You banked £%.2f&quot; %lastBalloonEarnings&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedbackMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedbackMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$feedbackText" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="instrMessage">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrMessage" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is a game where you have to optimise your earnings in a balloon pumping competition.&#10;&#10;You get prize money for each balloon you pump up, according to its size. But if you pump it too far it will pop and you'll get nothing for that balloon.&#10;&#10;Balloons differ in their maximum size - they can occasionally reach to almost the size of the screen but most will pop well before that.&#10;&#10;Press;&#10;    SPACE to pump the balloon&#10;    RETURN to bank the cash for this balloon and move onto the next&#10;" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="1832" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'imageFile': u'blueBalloon.png', u'maxPumps': 2}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 8}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 14}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 20}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 26}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 32}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 38}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 44}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 50}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 56}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 62}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 68}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 74}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 80}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 86}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 92}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 98}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 104}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 110}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 116}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="finalScore"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p43
sS'thisTrial'
p44
g1
(cpsychopy.data
TrialType
p45
c__builtin__
dict
p46
(dp47
VimageFile
p48
VblueBalloon.png
p49
sVmaxPumps
p50
I86
stRp51
sS'_exp'
p52
I198671952
sg11
S'trials'
p53
sg6
g7
sS'thisRepN'
p54
I0
sg21
I01
sg22
g23
sS'data'
p55
g1
(cpsychopy.data
DataHandler
p56
g46
(dp57
g20
cnumpy.core.multiarray
_reconstruct
p58
(cnumpy
ndarray
p59
(I0
tS'b'
tRp60
(I1
(I20
I1
tg29
(S'O4'
I0
I1
tRp61
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp62
I01
aS'--'
p63
aS'--'
p64
aI00
aI01
aI00
aI01
aS'--'
p65
aS'--'
p66
aS'--'
p67
aS'--'
p68
aS'--'
p69
aS'--'
p70
aS'--'
p71
aS'--'
p72
aS'--'
p73
aS'--'
p74
aS'--'
p75
aI00
aS'--'
p76
atbsg19
cnumpy.ma.core
_mareconstruct
p77
(cnumpy.ma.core
MaskedArray
p78
g59
(I0
tp79
S'b'
tRp80
(I1
(I20
I1
tg29
(S'f4'
I0
I1
tRp81
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x0033\x93?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9a\x99\x19@\x00\x00\x00\x00'
S'\x00\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01'
NtbsS'ran'
p82
g77
(g78
g59
g79
S'b'
tRp83
(I1
(I20
I1
tg81
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g77
(g78
g59
g79
S'b'
tRp84
(I1
(I20
I1
tg81
I00
S'\x00\x00@@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0A\x00\x00\xd8A\x00\x00\xb8A\x00\x00\x1cB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@B\x00\x00\x00\x00'
S'\x00\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01'
NtbsS'order'
p85
g77
(g78
g59
g79
S'b'
tRp86
(I1
(I20
I1
tg81
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x00\x00'
S'\x00\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x00\x01'
Ntbsg18
g77
(g78
g59
g79
S'b'
tRp87
(I1
(I20
I1
tg81
I00
S'\xb8\x1e\x05>\x00\x00\x00\x00\x00\x00\x00\x00\xcd\xcc\xcc>H\xe1\xfa>\n\xd7\xe3>\x1f\x85+?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\xebQ?\x00\x00\x00\x00'
S'\x00\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01'
NtbstRp88
(dp89
S'isNumeric'
p90
(dp91
g20
I00
sg82
I01
sg19
I01
sg17
I01
sg85
I01
sg18
I01
ssg53
g40
sS'dataTypes'
p92
(lp93
g82
ag85
ag17
ag18
ag19
ag20
asS'dataShape'
p94
(lp95
I20
aI1
asbsS'method'
p96
S'random'
p97
sS'sequenceIndices'
p98
g58
(g59
(I0
tS'b'
tRp99
(I1
(I20
I1
tg29
(S'i4'
I0
I1
tRp100
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x12\x00\x00\x00\x06\x00\x00\x00\x0e\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x0c\x00\x00\x00\r\x00\x00\x00\x08\x00\x00\x00\n\x00\x00\x00\t\x00\x00\x00\x0f\x00\x00\x00\x0b\x00\x00\x00\x11\x00\x00\x00\x07\x00\x00\x00\x13\x00\x00\x00\x10\x00\x00\x00'
tbsS'finished'
p101
I00
sS'nReps'
p102
I1
sS'nRemaining'
p103
I13
sS'trialList'
p104
(lp105
g1
(g45
g46
(dp106
g48
g49
sg50
I2
stRp107
ag1
(g45
g46
(dp108
g48
g49
sg50
I8
stRp109
ag1
(g45
g46
(dp110
g48
g49
sg50
I14
stRp111
ag1
(g45
g46
(dp112
g48
g49
sg50
I20
stRp113
ag1
(g45
g46
(dp114
g48
g49
sg50
I26
stRp115
ag1
(g45
g46
(dp116
g48
g49
sg50
I32
stRp117
ag1
(g45
g46
(dp118
g48
g49
sg50
I38
stRp119
ag1
(g45
g46
(dp120
g48
g49
sg50
I44
stRp121
ag1
(g45
g46
(dp122
g48
g49
sg50
I50
stRp123
ag1
(g45
g46
(dp124
g48
g49
sg50
I56
stRp125
ag1
(g45
g46
(dp126
g48
g49
sg50
I62
stRp127
ag1
(g45
g46
(dp128
g48
g49
sg50
I68
stRp129
ag1
(g45
g46
(dp130
g48
g49
sg50
I74
stRp131
ag1
(g45
g46
(dp132
g48
g49
sg50
I80
stRp133
ag51
ag1
(g45
g46
(dp134
g48
g49
sg50
I92
stRp135
ag1
(g45
g46
(dp136
g48
g49
sg50
I98
stRp137
ag1
(g45
g46
(dp138
g48
g49
sg50
I104
stRp139
ag1
(g45
g46
(dp140
g48
g49
sg50
I110
stRp141
ag1
(g45
g46
(dp142
g48
g49
sg50
I116
stRp143
asS'seed'
p144
I1832
sS'thisIndex'
p145
g28
(g100
S'\x0e\x00\x00\x00'
tRp146
sS'thisN'
p147
I6
sS'thisTrialN'
p148
I6
sS'nTotal'
p149
I20
sS'_warnUseOfNext'
p150
I01
sbasS'saveWideText'
p151
I01
sS'thisEntry'
p152
(dp153
sS'version'
p154
S''
sS'_paramNamesSoFar'
p155
(lp156
g48
ag50
asS'entries'
p157
(lp158
(dp159
g32
g33
sg15
S'space'
p160
sg25
V
sg16
F29.756612062454224
sg26
V
sg27
g31
sg24
g12
sg34
g35
sg36
V
sa(dp161
g32
g33
sS'trials.thisIndex'
p162
g28
(g100
S'\x00\x00\x00\x00'
tRp163
sg20
I01
sg25
V
sS'trials.thisRepN'
p164
I0
sg26
V
sg36
V
sg27
g31
sS'trials.thisN'
p165
I0
sg48
g49
sg24
g12
sS'trials.thisTrialN'
p166
I0
sg19
F0
sg34
g35
sg17
I3
sg50
I2
sg18
F0.13
sa(dp167
g32
g33
sS'trials.thisIndex'
p168
g28
(g100
S'\x03\x00\x00\x00'
tRp169
sg20
I00
sg25
V
sS'trials.thisRepN'
p170
I0
sg26
V
sg36
V
sg27
g31
sS'trials.thisN'
p171
I1
sg48
g49
sg24
g12
sS'trials.thisTrialN'
p172
I1
sg19
F1
sg34
g35
sg17
I20
sg50
I20
sg18
F0.40000000000000002
sa(dp173
g32
g33
sS'trials.thisIndex'
p174
g28
(g100
S'\x04\x00\x00\x00'
tRp175
sg20
I01
sg25
V
sS'trials.thisRepN'
p176
I0
sg26
V
sg36
V
sg27
g31
sS'trials.thisN'
p177
I2
sg48
g49
sg24
g12
sS'trials.thisTrialN'
p178
I2
sg19
F0
sg34
g35
sg17
I27
sg50
I26
sg18
F0.48999999999999999
sa(dp179
g32
g33
sS'trials.thisIndex'
p180
g28
(g100
S'\x05\x00\x00\x00'
tRp181
sg20
I00
sg25
V
sS'trials.thisRepN'
p182
I0
sg26
V
sg36
V
sg27
g31
sS'trials.thisN'
p183
I3
sg48
g49
sg24
g12
sS'trials.thisTrialN'
p184
I3
sg19
F1.1500000000000001
sg34
g35
sg17
I23
sg50
I32
sg18
F0.44499999999999995
sa(dp185
g32
g33
sS'trials.thisIndex'
p186
g28
(g100
S'\x12\x00\x00\x00'
tRp187
sg20
I00
sg25
V
sS'trials.thisRepN'
p188
I0
sg26
V
sg36
V
sg27
g31
sS'trials.thisN'
p189
I4
sg48
g49
sg24
g12
sS'trials.thisTrialN'
p190
I4
sg19
F2.4000000000000004
sg34
g35
sg17
I48
sg50
I110
sg18
F0.81999999999999995
sa(dp191
g32
g33
sS'trials.thisIndex'
p192
g28
(g100
S'\x06\x00\x00\x00'
tRp193
sg20
I01
sg25
V
sS'trials.thisRepN'
p194
I0
sg26
V
sg36
V
sg27
g31
sS'trials.thisN'
p195
I5
sg48
g49
sg24
g12
sS'trials.thisTrialN'
p196
I5
sg19
F0
sg34
g35
sg17
I39
sg50
I38
sg18
F0.66999999999999993
sasS'loops'
p197
(lp198
g40
asS'savePickle'
p199
I01
sb.